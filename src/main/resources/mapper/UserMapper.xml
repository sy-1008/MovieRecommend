<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjfu.suyi.movie.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.bjfu.suyi.movie.model.User">
    <!--@mbg.generated-->
    <!--@Table `user`-->
    <id column="n_id" jdbcType="INTEGER" property="nId" />
    <result column="c_username" jdbcType="VARCHAR" property="cUsername" />
    <result column="c_phonenum" jdbcType="VARCHAR" property="cPhonenum" />
    <result column="c_email" jdbcType="VARCHAR" property="cEmail" />
    <result column="c_password" jdbcType="VARCHAR" property="cPassword" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="c_user_image" jdbcType="VARCHAR" property="cUserImage" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    n_id, c_username, c_phonenum, c_email, c_password, `role`, c_user_image
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `user`
    where n_id = #{nId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `user`
    where n_id = #{nId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="n_id" keyProperty="nId" parameterType="com.bjfu.suyi.movie.model.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user` (c_username, c_phonenum, c_email, 
      c_password, `role`, c_user_image
      )
    values (#{cUsername,jdbcType=VARCHAR}, #{cPhonenum,jdbcType=VARCHAR}, #{cEmail,jdbcType=VARCHAR}, 
      #{cPassword,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{cUserImage,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="n_id" keyProperty="nId" parameterType="com.bjfu.suyi.movie.model.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cUsername != null">
        c_username,
      </if>
      <if test="cPhonenum != null">
        c_phonenum,
      </if>
      <if test="cEmail != null">
        c_email,
      </if>
      <if test="cPassword != null">
        c_password,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="cUserImage != null">
        c_user_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cUsername != null">
        #{cUsername,jdbcType=VARCHAR},
      </if>
      <if test="cPhonenum != null">
        #{cPhonenum,jdbcType=VARCHAR},
      </if>
      <if test="cEmail != null">
        #{cEmail,jdbcType=VARCHAR},
      </if>
      <if test="cPassword != null">
        #{cPassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="cUserImage != null">
        #{cUserImage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjfu.suyi.movie.model.User">
    <!--@mbg.generated-->
    update `user`
    <set>
      <if test="cUsername != null">
        c_username = #{cUsername,jdbcType=VARCHAR},
      </if>
      <if test="cPhonenum != null">
        c_phonenum = #{cPhonenum,jdbcType=VARCHAR},
      </if>
      <if test="cEmail != null">
        c_email = #{cEmail,jdbcType=VARCHAR},
      </if>
      <if test="cPassword != null">
        c_password = #{cPassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=INTEGER},
      </if>
      <if test="cUserImage != null">
        c_user_image = #{cUserImage,jdbcType=VARCHAR},
      </if>
    </set>
    where n_id = #{nId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjfu.suyi.movie.model.User">
    <!--@mbg.generated-->
    update `user`
    set c_username = #{cUsername,jdbcType=VARCHAR},
      c_phonenum = #{cPhonenum,jdbcType=VARCHAR},
      c_email = #{cEmail,jdbcType=VARCHAR},
      c_password = #{cPassword,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=INTEGER},
      c_user_image = #{cUserImage,jdbcType=VARCHAR}
    where n_id = #{nId,jdbcType=INTEGER}
  </update>
</mapper>